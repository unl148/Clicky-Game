{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/Title/index.js","components/Nav/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickFriend","id","alt","name","src","image","Wrapper","children","Jumbotron","style","height","paddingTop","textAlign","Title","Nav","href","App","state","friends","count","topCount","clicked","message","sort","Math","random","includes","setState","push","newCount","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ouFA+BeA,MA5Bf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,SAASC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,MAC7D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCA1BC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCW1BC,MAbf,YAAkC,IAAbD,EAAY,EAAZA,SACnB,OACE,yBACEE,MAAO,CAAEC,OAAQ,IAAKC,WAAY,IAAKC,UAAW,UAClDd,UAAU,aAEV,yBAAKA,UAAU,aACdS,K,MCFQM,MAJf,SAAehB,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,OCSvBO,MAXf,WACE,OACE,yBAAKhB,UAAU,kDACb,uBAAGA,UAAU,eAAeiB,KAAK,KAAjC,iBCkESC,E,2MA3DbC,MAAQ,CACNC,QAASA,EACTC,MAAM,EACNC,SAAS,EACTC,QAAS,GACTC,QAAS,a,EAIXtB,YAAc,SAACC,GAIb,GAFAiB,EAAQK,MAAK,kBAAIC,KAAKC,SAAS,MAE3B,EAAKR,MAAMI,QAAQK,SAASzB,GAQ9B,EAAK0B,SAAS,CAACR,MAAM,EAAGE,QAAS,GAAIC,QAAQ,mBARX,CAClC,EAAKL,MAAMI,QAAQO,KAAK3B,GACxB,IAAI4B,EAAW,EAAKZ,MAAME,MAAQ,EAE/BU,EAAS,EAAKZ,MAAMG,SACrB,EAAKO,SAAS,CAACR,MAAOU,EAAUT,SAAUS,EAAUP,QAAS,KACvD,EAAKK,SAAS,CAACR,MAAOU,EAAUP,QAAS,O,wEAQ3C,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,KACE,kBAAC,EAAD,oBACA,0BAAMxB,UAAU,gBAAhB,cAA2CgC,KAAKb,MAAMG,UACtD,0BAAMtB,UAAU,gBAAhB,UAAuCgC,KAAKb,MAAME,OAClD,6BACA,0BAAMrB,UAAU,gBAAgBgC,KAAKb,MAAMK,UAG/C,kBAAC,EAAD,KAEGQ,KAAKb,MAAMC,QAAQa,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACEhC,YAAa,EAAKA,YAClBC,GAAI+B,EAAO/B,GACXgC,IAAKD,EAAO/B,GACZE,KAAM6B,EAAO7B,KACbE,MAAO2B,EAAO3B,iB,GAlDR6B,a,MCLlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c2631878.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"button\" onClick={() => props.clickFriend(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      \n        {/*<div className=\"content\">\n         <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n        </div> \n      \n      <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        \n      </span>*/}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      <div className=\"container\">\n      {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"#\">\n        Clicky Game\n      </a>\n      \n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Nav from \"./components/Nav\";\n\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends: friends,\n    count:0,\n    topCount:0,\n    clicked: [],\n    message: \"Good Luck\"\n    };\n  \n\n  clickFriend = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    friends.sort(()=>Math.random()-.5);\n    // Set this.state.friends equal to the new friends array\n    if(!this.state.clicked.includes(id)){\n      this.state.clicked.push(id);\n      let newCount = this.state.count + 1;\n      \n      if(newCount>this.state.topCount){\n        this.setState({count: newCount, topCount: newCount, message: \"\"});  \n      } else (this.setState({count: newCount, message: \"\"}));\n    }    else (\n      this.setState({count:0, clicked: [], message:\"Game Over!\"})\n    )\n    \n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div>\n        <Nav>        \n        </Nav>\n        <Jumbotron>\n          <Title>Clicky Game</Title>    \n          <span className=\"navbar-brand\">Top Score: {this.state.topCount}</span>   \n          <span className=\"navbar-brand\">Score: {this.state.count}</span> \n          <br/>\n          <span className=\"navbar-brand\">{this.state.message}</span>   \n\n        </Jumbotron>\n      <Wrapper>\n        \n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickFriend={this.clickFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            // occupation={friend.occupation}\n            // location={friend.location}\n          />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}